---
import { t, getCurrentLanguage, getAvailableLanguages } from "tradux";

const traduxCookie = Astro.cookies.get("tradux_lang")?.value;
const currentLang = await getCurrentLanguage(traduxCookie);
---

<section>
    <h1>Astro</h1>

    <h2>{t.welcome}</h2>

    <p>{t.navigation.home}</p>
    <p>{t.navigation.about}</p>
    <p>{t.navigation.services}</p>

    <select id="lang-select">
        {
            getAvailableLanguages().map((lang) => (
                <option
                    value={lang.value}
                    selected={lang.value === currentLang}
                >
                    {lang.name}
                </option>
            ))
        }
    </select>
</section>

<script>
    import { setLanguage } from "tradux";

    const langSelect = document.getElementById("lang-select") as HTMLElement;

    langSelect.addEventListener("change", async (e: Event) => {
        await setLanguage((e.target as HTMLSelectElement).value);
        location.reload();
    });
</script>
